name: CI/CD Pipeline

on:
  push:
    branches: [ main, uat ]
  pull_request:
    branches: [ main ]

# Sets permissions for both CI and deployment
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # CI and Build Job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.128.0

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup Hugo
      uses: peaceiris/actions-hugo@v3
      with:
        hugo-version: 'latest'
        extended: true

    - name: Setup Pages
      if: github.ref == 'refs/heads/main'
      id: pages
      uses: actions/configure-pages@v5

    - name: Install Node.js dependencies
      run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"

    - name: Build
      run: npm run build

    - name: Test build
      run: |
        if [ ! -d "public" ]; then
          echo "Build failed: public directory not found"
          exit 1
        fi
        echo "Build successful"

    - name: HTML validation and link checking
      uses: chabad360/htmlproofer@master
      with:
        directory: "./public"
        arguments: --allow-hash-href --check-external-hash --disable-external --ignore-urls https://peterwarnock.github.io/ --checks "Links,Images,Scripts,HTML,OpenGraph"

    - name: SEO validation
      run: |
        echo "Checking for meta descriptions..."
        # Exclude paginated pages (/page/) and generated index pages that don't need unique descriptions
        missing=$(find public -name "*.html" | grep -v "/page/" | xargs grep -L '<meta name="description"' | wc -l)
        if [ "$missing" -gt 0 ]; then
          echo "Warning: $missing pages missing meta descriptions"
          find public -name "*.html" | grep -v "/page/" | xargs grep -L '<meta name="description"' | head -5
        else
          echo "SEO check passed"
        fi

    - name: Upload pages artifact
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./public

  # Deploy Job (only runs on main branch after successful build)
  deploy:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
