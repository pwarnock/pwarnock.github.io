<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Productivity on Peter Warnock</title><link>https://peterwarnock.com/tags/productivity/</link><description>Recent content in Productivity on Peter Warnock</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 16 Oct 2025 06:43:31 -0700</lastBuildDate><atom:link href="https://peterwarnock.com/tags/productivity/index.xml" rel="self" type="application/rss+xml"/><item><title>The Vibe Coding Revolution: Developer-Centric vs Product-Centric Tools in 2025</title><link>https://peterwarnock.com/posts/vibe-coding-revolution/</link><pubDate>Thu, 16 Oct 2025 06:43:31 -0700</pubDate><guid>https://peterwarnock.com/posts/vibe-coding-revolution/</guid><description>&lt;p&gt;The coding landscape has transformed dramatically in past year. What started as simple &lt;a href="https://en.wikipedia.org/wiki/Autocomplete" target="_blank" 
 rel="nofollow noopener noreferrer"&gt;
 autocomplete
&lt;/a&gt; has evolved into something entirely differentâ€”&lt;a href="https://en.wikipedia.org/wiki/Vibe_coding" target="_blank" 
 rel="nofollow noopener noreferrer"&gt;
 vibe coding
&lt;/a&gt; tools that understand intent, context, and can generate entire applications from natural language descriptions.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve used several code augmentation/generation tools over last year, and evolution has been remarkable. Let me walk you through the landscape as it stands today, broken down into two distinct categories that serve very different needs.&lt;/p&gt;</description></item></channel></rss>